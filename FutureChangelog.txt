Technical Upcoming:
-----------
Decrease file size
Only load art when needed
Request help button
Stop using IsolatedStorage
Update content pipeline file automatically

Immediate:
-------------
CHECK: Add property to say it's Windows store



Content upcoming:
--------------------
Create remaining character art
Create level 2
Create basic intro
Create intermezzos for levels 1-2
Translate stuff to English

Project management upcoming:
----------------------------
Post help-wanted requests
Create a time plan
 
Badly Reproducible:
---------------------
Android: crash on slider move to left?
Android: null appears
Fix clicks not working, possibly because of Draw/Update issues

Later:
-----------------
Various resolutions instead of scaling viewport
Music gallery
Tutorial on how to use visual novel
Android: back button to do turnaround if possible
In UpdateVersion, UpdateReadmeFile obviously doesn't work but that might be fine

--------------
Content ideas:
--------------
Pokemon card game: Bifrost
Boys acting as young boys (we need adults for everything) 
Age regression?
OP song
minigames:
- spot the difference
- something with a song
- hidden object
- rainbow
Vědátor zavřený v kleci
traps: overhead fall, pit, crushing walls, lava/acid? --too much?


Ideas for room 2:
---------------------
Tišík + holky, zatímco kluci jsou na záchodě
Časový limit, než začne bouřka
Hádka o tom, jestli jít do studny
Foreshadowing of ending


Old notes on engine:
---------------
Requirements:
 - save and load at any voice line, or when nothing is happening
 - move between rooms, have some memory for arbitrary level-based data
 - tips are global, and unlocked even if you don't find them in the room
 - rollback does not need to work, but it might be nice, but what needs to work is Log (but not across save/load)
 - after you unlock something once, it's unlocked forever
 - you can start from any room
 - your actions will have no consequences outside individual levels
 
A *save file* consists of a screenshot, timestamp, scene name, and the session.
A *session* consists of:
 - the active script, if any; this may either be a full script or the script ID if it's a non-anonymous script;
 - the position in the active script;
 - the ID of the room;
 - persistable properties of the room (your location, flags, your inventory, whether an interactible was interacted with)
 - 
 
As a save file is loaded, the active script, if any, is fast-forwarded to the selected position. This causes proper art, items and speakers to be displayed, and proper music and background sfx to play. 
